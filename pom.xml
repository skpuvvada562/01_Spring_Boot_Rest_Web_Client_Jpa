<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>01_Spring_Boot_Rest_Web_Client_Jpa</name>
	<description>Demo project for Spring Boot rest web client with JPA</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
	
	<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-web</artifactId>
</dependency>

	<!--  Start spring data jpa used to interact with database using jpa repository -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
	<!-- End spring data jpa used to interact with database using jpa repository -->
		
	<!--  Start spring boot starte webflux is used to communicate with 3rd party apis using web client -->	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
	<!--  Start spring boot starte webflux is used to communicate with 3rd party apis using web client -->
	
	<!--  Start spring boot dev tools is used to avoid restart when we did change in the code -->		

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!--  End spring boot dev tools is used to avoid restart when we did change in the code -->		
		
	<!--  Start lombok is used to avoid writing setters, getters and constructors using annotation we can do it -->			 
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
	<!--  End lombok is used to avoid writing setters, getters and constructors using annotation we can do it -->			 	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	<!--  Start postgresql is used to connect to postgre database -->			 	
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
<!--  End postgresql is used to connect to postgre database -->	

<!--  Start swagger2 is used to generates the API documentation -->	
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>
<!--  End swagger2 is used to generates the API documentation -->	

 <!--  Start swagger-ui is used to enable UI alternate for postman -->	
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>
<!--  End swagger-ui is used to enable UI alternate for postman -->	

<!--  Start Spring boot actuator enabled to know the health of the application -->	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
<!--  End Spring boot actuator enabled to know the health of the application-->	

<!--  Start Spring boot Security Enabled -->			
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
<!--  End Spring boot Security Enabled-->			
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
